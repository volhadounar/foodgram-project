# Generated by Django 3.1.7 on 2021-03-21 10:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bookmarks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Please enter an ingredient name of max 64 characters.', max_length=64, unique=True, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Please give a short name to the recipe.', max_length=64, verbose_name='Recipe name')),
                ('how_to', models.TextField(help_text='How to make.', max_length=1024, verbose_name='How to')),
                ('cooking_time', models.IntegerField(help_text='Please enter a cooking time in minutes.', null=True, verbose_name='Cooking time')),
                ('image', models.ImageField(blank=True, help_text='Upload image.', null=True, upload_to='image/', verbose_name='Illustration')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Date of publication')),
                ('favorite_for', models.ManyToManyField(related_name='favorite_recipes', through='recipes.Bookmarks', to=settings.AUTH_USER_MODEL)),
                ('from_who', models.ForeignKey(help_text='This recipe from.', on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL, verbose_name='From')),
            ],
            options={
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='Recipe_Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('vegetarian', 'vegetarian'), ('macrobiotic diet', 'macrobiotic diet'), ('mediterrenean diet', 'mediterrenean diet'), ('vegan diet', 'vegan diet'), ('raw food', 'raw food'), ('old recipes', 'old recipes'), ('fastfood', 'fastfood'), ('baking', 'baking'), ('gluten free', 'gluten free')], default='macrobiotic diet', help_text='Please select a name from the available.', max_length=20, unique=True, verbose_name='Name')),
                ('recipes', models.ManyToManyField(through='recipes.Recipe_Tag', to='recipes.Recipe')),
            ],
        ),
        migrations.AddField(
            model_name='recipe_tag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.tag'),
        ),
        migrations.CreateModel(
            name='Recipe_Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(null=True)),
                ('unit', models.CharField(blank=True, default='g', max_length=32, null=True, verbose_name='Measurement units')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.ingredient')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe')),
            ],
        ),
        migrations.AddField(
            model_name='recipe',
            name='ingredients',
            field=models.ManyToManyField(related_name='for_recipes', through='recipes.Recipe_Ingredient', to='recipes.Ingredient', verbose_name='Ingredients'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='orders',
            field=models.ManyToManyField(related_name='orders', through='recipes.Order', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(through='recipes.Recipe_Tag', to='recipes.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='order',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='bookmarks',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe'),
        ),
        migrations.AddField(
            model_name='bookmarks',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='follow',
            constraint=models.UniqueConstraint(fields=('user', 'author'), name='unique_follow'),
        ),
    ]
